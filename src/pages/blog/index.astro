---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION, SITE_BASE } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

const posts = await getCollection("blog");

const groupedByYear = posts.reduce((acc, post) => {
	const year = post.data.pubDate.getFullYear();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(post);
	return acc;
}, {});

const accByTags = posts.reduce<Record<string, number>>((acc, post) => {
	const tags = post.data.labels
		? post.data.labels.map(({ name }) => name)
		: [];

	if (tags.length) {
		tags.forEach((tag: any) => {
			if (!acc[tag]) {
				acc[tag] = 0;
			}
			acc[tag] += 1;
		});
	}
	return acc;
}, {});

---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="prose">
		<Header />
		<main>
			{Object.keys(accByTags).length > 0 && (
				<div class="mt-5">
				  <h3 class="text-lg font-bold mb-1 text-zinc-700">
					Tags
				  </h3>
				  <div class="pt-2">
					{Object.keys(accByTags).map((tag) => (
					  <div class="mr-6">
						<span class="align-middle">{tag}</span>
						<span class="text-gray-400 text-sm ml-1 align-middle">
						  ({accByTags[tag]})
						</span>
					  </div>
					))}
				  </div>
				</div>
			  )}
			<section>
				<ul>
					{
						[...Object.keys(groupedByYear)].map((year) => {
							return (
								<li class="list-none">
									<h2>{year}</h2>
									<ul class="p-0">
										{groupedByYear[year].map((post) => {
											const tags = post.data.labels
												? post.data.labels.map(
														({ name }) => name
												  )
												: [];

											return (
												<li class="flex justify-between p-0">
													<div class="flex gap-x-2">
														<a
															class="visited:text-accent no-underline"
															href={`${SITE_BASE}blog/${post.slug}/`}
														>
															{post.data.title}
														</a>
														{tags.map((label) => (
															<div class="link">
																#{label}
															</div>
														))}
													</div>
													<FormattedDate
														date={post.data.pubDate}
													/>
												</li>
											);
										})}
									</ul>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
